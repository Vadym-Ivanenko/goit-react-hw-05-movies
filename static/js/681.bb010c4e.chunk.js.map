{"version":3,"file":"static/js/681.bb010c4e.chunk.js","mappings":"8LAmCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,MAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,EAAS,WACtBS,MAAK,SAAAC,GACJN,EAAWM,EAAKC,SAChBL,EAAYI,EAAKE,cAClB,IACAC,MAAMC,QAAQC,IAClB,GAAE,CAACf,IAEa,IAAbK,GACK,4EAELA,EAAW,GAEX,wBACGF,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,WAHzB,CAYD,C,+LC/BKC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,oBADQ,cACzBG,EADyB,yBAIxBA,EAASd,KAAKC,SAJU,2CAAH,qDAOjBc,EAAe,mCAAG,WAAMC,GAAN,uFACNH,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACiDK,EADjD,oBADM,cACvBF,EADuB,yBAItBA,EAASd,KAAKC,SAJQ,2CAAH,sDAOfgB,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,oBACsCP,EADtC,oBADM,cACvBG,EADuB,yBAItBA,EAASd,MAJa,2CAAH,sDAOfF,EAAe,mCAAG,WAAMoB,GAAN,uFACNL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BAC8CP,EAD9C,oBADM,cACvBG,EADuB,yBAItBA,EAASd,MAJa,2CAAH,sDAOfmB,EAAY,mCAAG,WAAMD,GAAN,uFACHL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BAC8CP,EAD9C,oBADG,cACpBG,EADoB,yBAKnBA,EAASd,MALU,2CAAH,qD","sources":["components/Reviews.jsx","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState({});\n  const [quantity, setQuantity] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId, 'reviews')\n      .then(data => {\n        setReviews(data.results);\n        setQuantity(data.total_results);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (quantity === 0) {\n    return <p>Sorry, we don`t have any reviews for this movie.</p>;\n  }\n  if (quantity > 0) {\n    return (\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>Author: {review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '045729310d7d979f0a4752594b43807c';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieById => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieById}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieById => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieById}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async movieById => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieById}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","quantity","setQuantity","useEffect","getMovieReviews","then","data","results","total_results","catch","console","log","map","review","author","content","id","API_KEY","getTrendingMovies","axios","response","getSearchMovies","query","getMovieDetails","movieById","getMovieCast"],"sourceRoot":""}